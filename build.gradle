plugins {
    id "java-library"
    id "maven-publish"
    id "checkstyle"
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withJavadocJar()
    withSourcesJar()
}

ext {
    V_JUNIT = "4.13.1"
    V_JETBRAINS_ANNOTATIONS = "18.0.0"
}

repositories {
    mavenCentral()
    maven {
        name = "GitHubPackages"
        url = uri(System.getProperty("github.packages.url"))
        credentials {
            username = System.getProperty("github.packages.readonly.username")
            password = System.getProperty("github.packages.readonly.password")
        }
    }
}

configurations { checkstyleConfig }

configurations.configureEach { resolutionStrategy.cacheChangingModulesFor(24, "hours") }

dependencies {
    def ext = rootProject.ext
    compileOnly("org.jetbrains:annotations:${ext.V_JETBRAINS_ANNOTATIONS}")
    testImplementation("junit:junit:${ext.V_JUNIT}")
    checkstyleConfig("by.gto.library:checkstyle-config:+@zip").changing = true
}

tasks.named("compileJava").configure {
    options.encoding = "UTF-8"
}

tasks.named("compileTestJava").configure {
    options.encoding = "UTF-8"
}

tasks.withType(Javadoc).configureEach {
    options.encoding = "UTF-8"
}

tasks.withType(Jar).configureEach {
    dependsOn(test, check)
    manifest {
        attributes(["Created-By"            : "gradle",
                    "Build-Jdk-Spec"        : JavaVersion.current(),
                    "Implementation-Version": project.version]
        )
    }
}

tasks.named("javadoc") {
    (options as StandardJavadocDocletOptions).addBooleanOption("html5", true)
}

publishing {
    publications {
        autoCloseableHelper(MavenPublication) {
            from(components["java"])
            pom {
                name.set(project.name)
                description.set(project.description)
                developers {
                    developer {
                        id.set("ltv")
                        name.set("Tim Lukashevich")
                        email.set("silvernet@yandex.ru")
                        organization.set("BTO Corporation")
                        organizationUrl.set("http://www.gto.by")
                        roles.add("architect")
                        roles.add("developer")
                        timezone.set("+3")
                    }
                }
            }
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri(System.getProperty("github.packages.url"))
            credentials {
                username = System.getProperty("github.packages.publish.username")
                password = System.getProperty("github.packages.publish.password")
            }
        }
    }
}

checkstyle {
    toolVersion = "8.27"
    // checkstyle.xml copy from:
    // https://raw.githubusercontent.com/checkstyle/checkstyle/checkstyle-8.6/src/main/resources/google_checks.xml
    // the version should be as same as plugin version
//    configFile = rootProject.file("config/checkstyle/checkstyle.xml")
    config = resources.text.fromArchiveEntry(
            configurations.checkstyleConfig, "checkstyle.xml")
}
